author: Cook, William R.
author_list:
- affiliation: []
  family: Cook
  given: William R.
citations:
- unstructured: Abelson and Sussman. The Structure and Interpretation of Computer
    Programs. MIT Press, 1985.
- doi: 10.1145/62678.62720
  unstructured: N. Adams and J. Rees. Object-oriented programming in Scheme. In Proc.
    of the ACM Conf. on Lisp and Functional Programming, pages 277–288, 1988.
- unstructured: P. America. A behavioral approach to subtyping object-oriented programming
    languages. In Proc. of the REX School/Workshop on the Foundations of Object-Oriented
    Languages, 1990.
- author: M. P. Atkinson
  doi: 10.1145/4472.4477
  first-page: '539'
  issue: '4'
  journal-title: ACM Transactions on Programming Languages and Systems
  unstructured: M. P. Atkinson and R. Morrison. Procedures as persistent data objects.
    ACM Transactions on Programming Languages and Systems, 7(4):539–559, 1985.
  volume: '7'
  year: '1985'
- unstructured: 'M. R. Brown and G. Nelson. IO streams: Abstract types, real programs.
    Technical Report 53, Digital Equipment Corporation Systems Research Center, 1989.'
- doi: 10.1145/99370.99392
  unstructured: P. Canning, W. Cook, W. Hill, J. Mitchell, and W. Olthoff. F-bounded
    polymorphism for object-oriented programming. In Proc. of Conf. on Functional
    Programming Languages and Computer Architecture, pages 273–280, 1989.
- doi: 10.1145/74877.74924
  unstructured: P. Canning, W. Cook, W. Hill, and W. Olthoff. Interfaces for strongly-typed
    object-oriented programming. In Proc. of ACM Conf. on Object-Oriented Programming,
    Systems, Languages and Applications, pages 457–467, 1989.
- unstructured: P. Canning, W. Hill, and W. Olthoff. A kernel language for object-oriented
    programming. Technical Report STL-88-21, Hewlett-Packard Labs, 1988.
- doi: 10.1007/3-540-13346-1_2
  unstructured: L. Cardelli. A semantics of multiple inheritance. In Semantics of
    Data Types, volume 173 of Lecture Notes in Computer Science, pages 51–68. Springer-Verlag,
    1984.
- unstructured: L. Cardelli, J. Donahue, L. Glassman, M. Jordan, B. Kalsow, and G.
    Nelson. Modula-3 report (revised). Technical Report 52, Digital Equipment Corporation
    Systems Research Center, Dec. 1989.
- unstructured: L. Cardelli and X. Leroy. Abstract types and the dot notation. Digital
    Equipment Corporation Systems Research Center, 1990.
- unstructured: L. Cardelli and J. C. Mitchell. Operations on records. Technical Report
    48, Digital Equipment Corporation Systems Research Center, 1989.
- author: L. Cardelli
  doi: 10.1145/6041.6042
  first-page: '471'
  issue: '4'
  journal-title: Computing Surveys
  unstructured: L. Cardelli and P. Wegner. On understanding types, data abstraction,
    and polymorphism. Computing Surveys, 17(4):471–522, 1986.
  volume: '17'
  year: '1986'
- doi: 10.1145/74877.74884
  unstructured: C. Chambers, D. Ungar, and E. Lee. An efficient implementation of
    SELF, a dynamically-typed object-oriented language based on prototypes. In Proc.
    of ACM Conf. on Object-Oriented Programming, Systems, Languages and Applications,
    pages 49–70, 1989.
- doi: 10.1145/74877.74922
  unstructured: W. Cook. A Denotational Semantics of Inheritance. PhD thesis, Brown
    University, 1989.
- doi: 10.1145/74877.74922
  unstructured: W. Cook and J. Palsberg. A denotational semantics of inheritance and
    its correctness. In Proc. of ACM Conf. on Object-Oriented Programming, Systems,
    Languages and Applications, pages 433–444, 1989.
- unstructured: S. Danforth and C. Tomlinson. Type theories and object-oriented programming.
    Technical Report PP-040-87, MCC, 1987.
- doi: 10.1007/978-3-642-69962-7
  unstructured: 'H. Ehrig and B. Mahr. Fundamentals of Algebraic Specification 1:
    Equations and Initial Semantics. Springer-Verlag, 1985.'
- doi: 10.1016/0743-1066(84)90004-9
  unstructured: 'J. Goguen and J. Meseguer. Eqlog: Equality, types, and generic modules
    for logic programming. In Functional and Logic Programming, pages 295–363. Prentice-Hall,
    1986. An earlier version appears in Journal of Logic Programming, Volume 1, Number
    2, pages 179–210, September 84.'
- author: J. Goguen
  doi: 10.1145/321992.321997
  first-page: '68'
  issue: '1'
  journal-title: J. ACM
  unstructured: J. Goguen, J. Thatcher, E. Wagner, and J. Wright. Initial algebra
    semantics and continuous algebras. J. ACM, 24(1):68–95, January 1977.
  volume: '24'
  year: '1977'
- unstructured: 'A. Goldberg and D. Robson. Smalltalk-80: the Language and Its Implementation.
    Addison-Wesley, 1983.'
- unstructured: J. Graver. Type-Checking and Type-Inference for Object-Oriented Programming
    Languages. PhD thesis, University of Illinois, 1989.
- author: J. Guttag
  doi: 10.1145/359605.359618
  first-page: '297'
  issue: '6'
  journal-title: Communications of the ACM
  unstructured: J. Guttag. Abstract data types and the development of data structures.
    Communications of the ACM, 20(6):297–404, June 1977.
  volume: '20'
  year: '1977'
- unstructured: J. V. Guttag and J. J. Horning. An introduction to the larch shared
    language. In IFIP, 1983.
- doi: 10.1145/28697.28728
  unstructured: R. E. Johnson. Type-checking smalltalk. In Proc. of ACM Conf. on Object-Oriented
    Programming, Systems, Languages and Applications, pages 315–321, 1986.
- unstructured: 'K. Kahn, E. Tribble, M. Miller, and D. Bobrow. Vulcan: Logical concurrent
    objects. In Research Directions in Object-Oriented Programming, pages 75–112.
    MIT Press, 1987.'
- unstructured: S. E. Keene. Object-Oriented Programming in Common Lisp. Addison-Wesley,
    1989.
- doi: 10.1145/28697.28729
  unstructured: W. R. LaLonde, D. A. Thomas, and J. R. Pugh. An exemplar based smalltalk.
    In Proc. of ACM Conf. on Object-Oriented Programming, Systems, Languages and Applications,
    pages 322–330, 1986.
- doi: 10.1145/97945.97970
  unstructured: G. T. Leavens and W. E. Weihl. Reasoning about object-oriented programs
    that use subtypes. In Proc. of ACM Conf. on Object-Oriented Programming, Systems,
    Languages and Applications, 1990. to appear.
- author: B. Liskov
  doi: 10.1145/359763.359789
  first-page: '564'
  journal-title: Communications of the ACM
  unstructured: B. Liskov, A. Snyder, R. Atkinson, and C. Schaffert. Abstraction mechanisms
    in CLU. Communications of the ACM, 20:564–576, 1977.
  volume: '20'
  year: '1977'
- author: B. Liskov
  doi: 10.1145/942572.807045
  first-page: '50'
  issue: '4'
  journal-title: SIGPlan Notices
  unstructured: B. Liskov and S. Zilles. Programming with abstract data types. SIGPlan
    Notices, 9(4):50–59, 1974.
  volume: '9'
  year: '1974'
- doi: 10.1145/512644.512670
  unstructured: D. B. MacQueen. Using dependent types to express modular structure.
    In Proc. of the ACM Symp. on Principles of Programming Languages. ACM, 1986.
- doi: 10.1145/318593.318606
  unstructured: J. C. Mitchell and G. D. Plotkin. Abstract types have existential
    type. In Proc. of the ACM Symp. on Principles of Programming Languages. ACM, 1985.
- unstructured: U. S. D. of Defense. Reference manual for the Ada programming language.
    ANSI/MIL-STD-1815 A, 1983.
- author: D. Parnas
  doi: 10.1145/361598.361623
  first-page: '1053'
  journal-title: Communications of the ACM
  unstructured: D. Parnas. On the criteria to be used in decomposing systems into
    modules. Communications of the ACM, 15:1053–1058, 1972.
  volume: '15'
  year: '1972'
- author: D. Parnas
  doi: 10.1145/355602.361309
  first-page: '330'
  journal-title: Communications of the ACM
  unstructured: D. Parnas. A technique for software module specification. Communications
    of the ACM, 15:330–336, 1972.
  volume: '15'
  year: '1972'
- doi: 10.1145/62678.62721
  unstructured: 'U. S. Reddy. Objects as closures: Abstract semantics of object-oriented
    languages. In Proc. of the ACM Conf. on Lisp and Functional Programming, pages
    289–297, 1988.'
- doi: 10.1145/75277.75284
  unstructured: D. Rémy. Typechecking records and variants in a natural extension
    of ML. In Proc. of the ACM Symp. on Principles of Programming Languages, pages
    77–88, 1989.
- unstructured: J. C. Reynolds. User-defined types and procedural data structures
    as complementary approaches to data abstraction. In New Advances in Algorithmic
    Languages, pages 157–168. Inst. de Recherche d'Informatique et d'Automatique,
    1975.
- unstructured: R. Stallman, D. Weinreb, and D. Moon. Lisp Machine Manual. MIT AI
    Lab, 1983.
- unstructured: J. Stein, editor. Random House Dictionary of the English Language.
    Random House, 1967.
- unstructured: M. Wand. Complete type inference for simple objects. In Proc. IEEE
    Symposium on Logic in Computer Science, pages 37–44, 1987.
- doi: 10.1109/LICS.1989.39162
  unstructured: M. Wand. Type inference for record concatenation and multiple inheritance.
    In Proc. IEEE Symposium on Logic in Computer Science, pages 92–97, 1989.
- doi: 10.1007/978-3-642-96757-3
  unstructured: N. Wirth. Programming in Modula-2. Springer-Verlag, 1983.
- author: S. N. Zilles
  doi: 10.1145/390014.808305
  first-page: '142'
  issue: '9'
  journal-title: SIGPlan Notices
  unstructured: 'S. N. Zilles. Procedural encapsulation: A linguistic protection mechanism.
    SIGPlan Notices, 8(9):142–146, 1973.'
  volume: '8'
  year: '1973'
doi: 10.1007/bfb0019443
files:
- cook-william-r.object-oriented-programming-versus-abstract-data-types1991.pdf
isbn:
- '9783540539315'
- '9783540464501'
journal: Foundations of Object-Oriented Languages
month: 6
pages: 151--178
publisher: Springer Berlin Heidelberg
title: Object-oriented programming versus abstract data types
type: inbook
url: http://dx.doi.org/10.1007/bfb0019443
year: 1991
